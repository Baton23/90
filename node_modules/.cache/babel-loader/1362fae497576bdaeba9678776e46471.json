{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={businesses:[],balance:10000,// начальный баланс в TON\nstatus:'idle'};export const businessSlice=createSlice({name:'business',initialState,reducers:{addBusiness:(state,action)=>{state.businesses.push(action.payload);},setBusinesses:(state,action)=>{state.businesses=action.payload;},deductBalance:(state,action)=>{state.balance-=action.payload;},increaseBalance:(state,action)=>{state.balance+=action.payload;}}});export const{addBusiness,setBusinesses,deductBalance,increaseBalance}=businessSlice.actions;export const fetchBusinesses=()=>async dispatch=>{// Implement blockchain interaction here\n};export const purchaseBusiness=business=>async dispatch=>{// Blockchain purchase logic\ndispatch(addBusiness(business));};export default businessSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","businesses","balance","status","businessSlice","name","reducers","addBusiness","state","action","push","payload","setBusinesses","deductBalance","increaseBalance","actions","fetchBusinesses","dispatch","purchaseBusiness","business","reducer"],"sources":["/root/RTHE90S/src/store/slices/business-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from '../store';\r\n\r\ninterface Business {\r\n  name: string;\r\n  price: number;\r\n  profit: number;\r\n  productionTime: number;\r\n}\r\n\r\ninterface BusinessState {\r\n  businesses: Business[];\r\n  balance: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: BusinessState = {\r\n  businesses: [],\r\n  balance: 10000, // начальный баланс в TON\r\n  status: 'idle',\r\n};\r\n\r\nexport const businessSlice = createSlice({\r\n  name: 'business',\r\n  initialState,\r\n  reducers: {\r\n    addBusiness: (state, action: PayloadAction<Business>) => {\r\n      state.businesses.push(action.payload);\r\n    },\r\n    setBusinesses: (state, action: PayloadAction<Business[]>) => {\r\n      state.businesses = action.payload;\r\n    },\r\n    deductBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance -= action.payload;\r\n    },\r\n    increaseBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addBusiness, setBusinesses, deductBalance, increaseBalance } = businessSlice.actions;\r\n\r\nexport const fetchBusinesses = (): AppThunk => async (dispatch) => {\r\n  // Implement blockchain interaction here\r\n};\r\n\r\nexport const purchaseBusiness = (business: Business): AppThunk => async (dispatch) => {\r\n  // Blockchain purchase logic\r\n  dispatch(addBusiness(business));\r\n};\r\n\r\nexport default businessSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAgB7D,KAAM,CAAAC,YAA2B,CAAG,CAClCC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,KAAK,CAAE;AAChBC,MAAM,CAAE,MACV,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGL,WAAW,CAAC,CACvCM,IAAI,CAAE,UAAU,CAChBL,YAAY,CACZM,QAAQ,CAAE,CACRC,WAAW,CAAEA,CAACC,KAAK,CAAEC,MAA+B,GAAK,CACvDD,KAAK,CAACP,UAAU,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CACvC,CAAC,CACDC,aAAa,CAAEA,CAACJ,KAAK,CAAEC,MAAiC,GAAK,CAC3DD,KAAK,CAACP,UAAU,CAAGQ,MAAM,CAACE,OAAO,CACnC,CAAC,CACDE,aAAa,CAAEA,CAACL,KAAK,CAAEC,MAA6B,GAAK,CACvDD,KAAK,CAACN,OAAO,EAAIO,MAAM,CAACE,OAAO,CACjC,CAAC,CACDG,eAAe,CAAEA,CAACN,KAAK,CAAEC,MAA6B,GAAK,CACzDD,KAAK,CAACN,OAAO,EAAIO,MAAM,CAACE,OAAO,CACjC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEJ,WAAW,CAAEK,aAAa,CAAEC,aAAa,CAAEC,eAAgB,CAAC,CAAGV,aAAa,CAACW,OAAO,CAEnG,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAAgB,KAAO,CAAAC,QAAQ,EAAK,CACjE;AAAA,CACD,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,QAAkB,EAAe,KAAO,CAAAF,QAAQ,EAAK,CACpF;AACAA,QAAQ,CAACV,WAAW,CAACY,QAAQ,CAAC,CAAC,CACjC,CAAC,CAED,cAAe,CAAAf,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}