{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  businesses: [],\n  balance: 10000,\n  // начальный баланс в TON\n  status: 'idle'\n};\nexport const businessSlice = createSlice({\n  name: 'business',\n  initialState,\n  reducers: {\n    addBusiness: (state, action) => {\n      state.businesses.push(action.payload);\n    },\n    setBusinesses: (state, action) => {\n      state.businesses = action.payload;\n    },\n    deductBalance: (state, action) => {\n      state.balance -= action.payload;\n    },\n    increaseBalance: (state, action) => {\n      state.balance += action.payload;\n    }\n  }\n});\nexport const {\n  addBusiness,\n  setBusinesses,\n  deductBalance,\n  increaseBalance\n} = businessSlice.actions;\nexport const fetchBusinesses = () => async dispatch => {\n  // Implement blockchain interaction here\n};\nexport const purchaseBusiness = business => async dispatch => {\n  // Blockchain purchase logic\n  dispatch(addBusiness(business));\n};\nexport default businessSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","businesses","balance","status","businessSlice","name","reducers","addBusiness","state","action","push","payload","setBusinesses","deductBalance","increaseBalance","actions","fetchBusinesses","dispatch","purchaseBusiness","business","reducer"],"sources":["/root/RTHE90S/src/store/slices/business-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from '../store';\r\n\r\ninterface Business {\r\n  name: string;\r\n  price: number;\r\n  profit: number;\r\n  productionTime: number;\r\n}\r\n\r\ninterface BusinessState {\r\n  businesses: Business[];\r\n  balance: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: BusinessState = {\r\n  businesses: [],\r\n  balance: 10000, // начальный баланс в TON\r\n  status: 'idle',\r\n};\r\n\r\nexport const businessSlice = createSlice({\r\n  name: 'business',\r\n  initialState,\r\n  reducers: {\r\n    addBusiness: (state, action: PayloadAction<Business>) => {\r\n      state.businesses.push(action.payload);\r\n    },\r\n    setBusinesses: (state, action: PayloadAction<Business[]>) => {\r\n      state.businesses = action.payload;\r\n    },\r\n    deductBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance -= action.payload;\r\n    },\r\n    increaseBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addBusiness, setBusinesses, deductBalance, increaseBalance } = businessSlice.actions;\r\n\r\nexport const fetchBusinesses = (): AppThunk => async (dispatch) => {\r\n  // Implement blockchain interaction here\r\n};\r\n\r\nexport const purchaseBusiness = (business: Business): AppThunk => async (dispatch) => {\r\n  // Blockchain purchase logic\r\n  dispatch(addBusiness(business));\r\n};\r\n\r\nexport default businessSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAgB7D,MAAMC,YAA2B,GAAG;EAClCC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EAAE;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCM,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAA+B,KAAK;MACvDD,KAAK,CAACP,UAAU,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACvC,CAAC;IACDC,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAiC,KAAK;MAC3DD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACE,OAAO;IACnC,CAAC;IACDE,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACE,OAAO;IACjC,CAAC;IACDG,eAAe,EAAEA,CAACN,KAAK,EAAEC,MAA6B,KAAK;MACzDD,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACE,OAAO;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,WAAW;EAAEK,aAAa;EAAEC,aAAa;EAAEC;AAAgB,CAAC,GAAGV,aAAa,CAACW,OAAO;AAEnG,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAgB,MAAOC,QAAQ,IAAK;EACjE;AAAA,CACD;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAkB,IAAe,MAAOF,QAAQ,IAAK;EACpF;EACAA,QAAQ,CAACV,WAAW,CAACY,QAAQ,CAAC,CAAC;AACjC,CAAC;AAED,eAAef,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}