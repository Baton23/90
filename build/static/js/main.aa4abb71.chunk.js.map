{"version":3,"sources":["store/slices/business-slice.ts","store/store.ts","components/Business.tsx","components/Dashboard.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["businessSlice","createSlice","name","initialState","businesses","balance","status","reducers","addBusiness","state","action","push","payload","setBusinesses","deductBalance","increaseBalance","actions","store","configureStore","reducer","business","businessReducer","Business","dispatch","useDispatch","useSelector","_jsxs","className","children","_jsx","price","profit","productionTime","map","index","onClick","alert","handleAddBusiness","src","concat","toLowerCase","replace","alt","Dashboard","Header","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.aa4abb71.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from '../store';\r\n\r\ninterface Business {\r\n  name: string;\r\n  price: number;\r\n  profit: number;\r\n  productionTime: number;\r\n}\r\n\r\ninterface BusinessState {\r\n  businesses: Business[];\r\n  balance: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: BusinessState = {\r\n  businesses: [],\r\n  balance: 10000, // начальный баланс в TON\r\n  status: 'idle',\r\n};\r\n\r\nexport const businessSlice = createSlice({\r\n  name: 'business',\r\n  initialState,\r\n  reducers: {\r\n    addBusiness: (state, action: PayloadAction<Business>) => {\r\n      state.businesses.push(action.payload);\r\n    },\r\n    setBusinesses: (state, action: PayloadAction<Business[]>) => {\r\n      state.businesses = action.payload;\r\n    },\r\n    deductBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance -= action.payload;\r\n    },\r\n    increaseBalance: (state, action: PayloadAction<number>) => {\r\n      state.balance += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addBusiness, setBusinesses, deductBalance, increaseBalance } = businessSlice.actions;\r\n\r\nexport const fetchBusinesses = (): AppThunk => async (dispatch) => {\r\n  // Implement blockchain interaction here\r\n};\r\n\r\nexport const purchaseBusiness = (business: Business): AppThunk => async (dispatch) => {\r\n  // Blockchain purchase logic\r\n  dispatch(addBusiness(business));\r\n};\r\n\r\nexport default businessSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport businessReducer from './slices/business-slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    business: businessReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addBusiness, deductBalance } from '../store/slices/business-slice';\r\nimport './styles/Business.css';\r\nimport { RootState } from '../store/store';\r\n\r\nconst Business: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const balance = useSelector((state: RootState) => state.business.balance);\r\n  const businesses = useSelector((state: RootState) => state.business.businesses);\r\n\r\n  const handleAddBusiness = (business: any) => {\r\n    if (balance >= business.price) {\r\n      dispatch(deductBalance(business.price));\r\n      dispatch(addBusiness(business));\r\n    } else {\r\n      alert(\"Not enough balance to buy this business\");\r\n    }\r\n  };\r\n\r\n  const businessOptions = [\r\n    { name: 'Soviet Press Kiosk', price: 100, profit: 10, productionTime: 5 },\r\n    { name: 'Racketeering', price: 500, profit: 50, productionTime: 15 },\r\n    { name: 'Black Market', price: 1000, profit: 100, productionTime: 30 },\r\n    { name: 'Video Rental', price: 2000, profit: 200, productionTime: 60 }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"business-container\">\r\n      <h2>Buy a Business</h2>\r\n      <div className=\"business-selection\">\r\n        {businessOptions.map((business, index) => (\r\n          <button key={index} onClick={() => handleAddBusiness(business)}>\r\n            <img src={`/assets/images/${business.name.toLowerCase().replace(/ /g, '-')}.png`} alt={business.name} />\r\n            <span>{business.name}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <h2>Owned Businesses</h2>\r\n      <ul>\r\n        {businesses.map((business, index) => (\r\n          <li key={index}>\r\n            <img src={`/assets/images/${business.name.toLowerCase().replace(/ /g, '-')}.png`} alt={business.name} />\r\n            <span>{business.name}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\nimport './styles/Dashboard.css';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const businesses = useSelector((state: RootState) => state.business.businesses);\r\n  const balance = useSelector((state: RootState) => state.business.balance);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Welcome to the 90s Economic Strategy Game</h2>\r\n      <div className=\"balance\">Balance: {balance} TON</div>\r\n      <h2>Your Businesses</h2>\r\n      <ul className=\"business-list\">\r\n        {businesses.map((business, index) => (\r\n          <li key={index}>\r\n            <img src={`/assets/images/${business.name.toLowerCase().replace(/ /g, '-')}.png`} alt={business.name} />\r\n            <span>{business.name}</span>\r\n            <div>Profit: {business.profit} TON</div>\r\n            <div>Production Time: {business.productionTime} minutes</div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './styles/Header.css';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>90s Economic Strategy Game</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Business from './components/Business';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/business\" element={<Business />} />\r\n          <Route path=\"/\" element={<Dashboard />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';  // Убедитесь, что эта строка присутствует\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}